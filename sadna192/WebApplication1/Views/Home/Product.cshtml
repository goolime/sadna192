@model ProductInStoreViewModel
@using sadna192
@{
    ViewData["Title"] = "Product";
}

<h2>@Model.StoreName : @Model.Name</h2>
@if (((I_User_ServiceLayer)ViewData["SL"]).GetUserState().isOwner(Model.StoreName))
{
    <button onclick="show_edit_product_form()">Edit</button>
    <div id="editProduct" style="visibility: @(ViewData["alertEditProduct"]!=null && (bool)ViewData["alertEditProduct"]? "visible":"hidden")">
        @if (ViewData["alertEditProduct"] != null && (bool)ViewData["alertEditProduct"])
        {
            <font color="red">cannot edit the product</font>
        }
        @using (Html.BeginForm("EditProductForm", "Home", FormMethod.Post))
        {
            @Html.HiddenFor(s => Model.Name)
            @Html.HiddenFor(s => Model.StoreName)
            <font>New Name:</font> @Html.TextBoxFor(s => Model.EditProduct.NewName, new { @value = Model.Name + "" })
            <font>Amount:</font> @Html.TextBoxFor(s => Model.EditProduct.ProductAmount, new { @value = Model.EditProduct.ProductAmount + "" })
            <font>Category:</font> @Html.TextBoxFor(s => Model.EditProduct.ProductCategory, new { @value = Model.EditProduct.ProductCategory + "" })
            <font>Price:</font> @Html.TextBoxFor(s => Model.EditProduct.ProductPrice, new { @value = Model.EditProduct.ProductPrice + "" })

            <button type="submit" class="btn btn-primary">Save</button>


        }
    </div>
    if (ViewData["alertRemoveProduct"] != null && (bool)ViewData["alertRemoveProduct"])
    {
        <font color="red"> could not remove the product</font>
    }
    @using (Html.BeginForm("RemoveProductForm", "Home", FormMethod.Post))
    {
        @Html.HiddenFor(s => Model.Name)
        @Html.HiddenFor(s => Model.StoreName)
        <button type="submit" class="btn btn-primary">Delete</button>

    }

}
<button onclick="show_add_to_cart_form()">Add To Cart</button>
<div id="addToCart" style="visibility: @(ViewData["alertAddToCart"]!=null && (bool)ViewData["alertAddToCart"]? "visible":"hidden")">
    @if (ViewData["alertAddToCart"] != null && (bool)ViewData["alertAddToCart"])
    {
        <font color="red"> could not add the product to cart</font>
    }
    @using (Html.BeginForm("AddToCart", "Home", FormMethod.Post))
    {
        @Html.HiddenFor(s => Model.Name)
        @Html.HiddenFor(s => Model.StoreName)
        @Html.TextBoxFor(s => s.AddToCart.Amount, new { @placeholder = "amount is " + Model.EditProduct.ProductAmount })
        <button type="submit" class="btn btn-primary">Add</button>

    }

</div>

<button onclick="show_add_discount_form()">Add Discount</button>
<div id="addDiscount" style="visibility: @(ViewData["alertAddDiscount"]!=null && (bool)ViewData["alertAddDiscount"]? "visible":"hidden")">
    @if (ViewData["alertAddDiscount"] != null && (bool)ViewData["alertAddDiscount"])
    {
        <font color="red"> could not add the discount to the product </font>
    }
    @using (Html.BeginForm("AddDiscount", "Home", FormMethod.Post))
    {
        @Html.HiddenFor(s => Model.Name)
        @Html.HiddenFor(s => Model.StoreName)

    }

</div>

<script>
    function show_edit_product_form() {
        var isHidden = document.getElementById('editProduct').style.visibility === 'hidden';
        document.getElementById('editProduct').style.visibility = isHidden ? 'visible' : 'hidden';
    }

    function show_add_discount_form() {
        var isHidden = document.getElementById('addDiscount').style.visibility === 'hidden';
        document.getElementById('addDiscount').style.visibility = isHidden ? 'visible' : 'hidden';
    }

    function show_add_to_cart_form() {
        var isHidden = document.getElementById('addToCart').style.visibility === 'hidden';
        document.getElementById('addToCart').style.visibility = isHidden ? 'visible' : 'hidden';
    }
</script>